<Activity mc:Ignorable="sap sap2010" x:Class="CreateExcelFromWebRequests" this:CreateExcelFromWebRequests.in_directory="Artifacts" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uuat="clr-namespace:UiPath.UIAutomationNext.Activities.Triggers;assembly=UiPath.UIAutomationNext.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_requestList" Type="InArgument(scg:List(uuat:WebRequestCompletedArgs))" />
    <x:Property Name="in_directory" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext</x:String>
      <x:String>UiPath</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.IO</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Interop</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Api</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities.Api</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CreateExcelFromWebRequests" sap:VirtualizedContainerService.HintSize="701.6000000000001,4028" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="fileExists" />
      <Variable x:TypeArguments="x:String" Default="WebRequestReport.xlsx" Name="fileName" />
      <Variable x:TypeArguments="x:String" Name="filePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CheckTrue DisplayName="Check True" ErrorMessage="The request list is null!" sap:VirtualizedContainerService.HintSize="606.4,163.2" sap2010:WorkflowViewState.IdRef="CheckTrue_1">
      <ui:CheckTrue.Expression>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">in_requestList != null</CSharpValue>
        </InArgument>
      </ui:CheckTrue.Expression>
    </ui:CheckTrue>
    <Assign sap:VirtualizedContainerService.HintSize="606.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">filePath</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">System.IO.Path.Combine(in_directory, fileName)</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:FileExistsX DisplayName="File Exists" sap:VirtualizedContainerService.HintSize="606.4,166.4" sap2010:WorkflowViewState.IdRef="FileExistsX_1">
      <ui:FileExistsX.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">fileExists</CSharpReference>
        </OutArgument>
      </ui:FileExistsX.Exists>
      <ui:FileExistsX.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">filePath</CSharpValue>
        </InArgument>
      </ui:FileExistsX.Path>
    </ui:FileExistsX>
    <If sap:VirtualizedContainerService.HintSize="606.4,392" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">fileExists</CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,164" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="382.4,104" sap2010:WorkflowViewState.IdRef="DeleteFileX_1">
            <ui:DeleteFileX.Path>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">filePath</CSharpValue>
              </InArgument>
            </ui:DeleteFileX.Path>
          </ui:DeleteFileX>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="606,3170" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="572,3060" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="538,3000" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="504,2708" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Create Header" sap:VirtualizedContainerService.HintSize="470,57" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_1">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">Excel.Sheet["Sheet1"].Cell["A1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">"Frame ID"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_2">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">Excel.Sheet["Sheet1"].Cell["B1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">"Initiator"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_3">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">Excel.Sheet["Sheet1"].Cell["C1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">"Method"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_4">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">Excel.Sheet["Sheet1"].Cell["D1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">"Request ID"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_5">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">Excel.Sheet["Sheet1"].Cell["E1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">"Tab ID"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_6">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">Excel.Sheet["Sheet1"].Cell["F1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">"Timestamp"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_7">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">Excel.Sheet["Sheet1"].Cell["G1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">"Type"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_8">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">Excel.Sheet["Sheet1"].Cell["H1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">"Status Code"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_9">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">Excel.Sheet["Sheet1"].Cell["I1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">"Ip"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_10">
                        <ueab:WriteCellX.Cell>
                          <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                            <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">Excel.Sheet["Sheet1"].Cell["J1"]</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Cell>
                        <ueab:WriteCellX.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">"URL"</CSharpValue>
                          </InArgument>
                        </ueab:WriteCellX.Value>
                      </ueab:WriteCellX>
                    </Sequence>
                    <ui:ForEach x:TypeArguments="uuat:WebRequestCompletedArgs" CurrentIndex="{x:Null}" DisplayName="For Each args" sap:VirtualizedContainerService.HintSize="470,2091" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="uuat:WebRequestCompletedArgs">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="uuat:WebRequestCompletedArgs" Name="args" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,1961" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_12">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">Excel.Sheet["Sheet1"].Cell["A2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">args.FrameId</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_13">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">Excel.Sheet["Sheet1"].Cell["B2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">args.Initiator</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_14">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">Excel.Sheet["Sheet1"].Cell["C2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">args.Method</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_15">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">Excel.Sheet["Sheet1"].Cell["D2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">args.RequestId</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_16">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">Excel.Sheet["Sheet1"].Cell["E2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">args.TabId</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_17">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">Excel.Sheet["Sheet1"].Cell["F2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52" xml:space="preserve">DateTimeOffset
.FromUnixTimeMilliseconds(
	Convert.ToInt64(
		Convert.ToDouble(args.TimeStamp)
	)
)
.ToLocalTime()
.DateTime
.ToString("dd/MM/yyyy HH:mm:ss")</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_18">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">Excel.Sheet["Sheet1"].Cell["G2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">args.Type</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_19">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">Excel.Sheet["Sheet1"].Cell["H2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">args.StatusCode</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_20">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">Excel.Sheet["Sheet1"].Cell["I2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">args.Ip</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                            <ueab:WriteCellX AutoIncrementRow="True" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_21">
                              <ueab:WriteCellX.Cell>
                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">Excel.Sheet["Sheet1"].Cell["J2"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Cell>
                              <ueab:WriteCellX.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">args.Url</CSharpValue>
                                </InArgument>
                              </ueab:WriteCellX.Value>
                            </ueab:WriteCellX>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc:IEnumerable">
                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">in_requestList</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                    <ueab:CreateTableX OutTableName="{x:Null}" TableName="{x:Null}" DisplayName="Format as Table" HasHeaders="True" sap:VirtualizedContainerService.HintSize="470,244" sap2010:WorkflowViewState.IdRef="CreateTableX_1">
                      <ueab:CreateTableX.Range>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">Excel.Sheet["Sheet1"].Range["A1:J" + (in_requestList.Count+1).ToString()]</CSharpValue>
                        </InArgument>
                      </ueab:CreateTableX.Range>
                    </ueab:CreateTableX>
                    <ueab:AutoFitX Columns="True" DisplayName="Autofit Range" sap:VirtualizedContainerService.HintSize="470,148" sap2010:WorkflowViewState.IdRef="AutoFitX_1" Rows="True">
                      <ueab:AutoFitX.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">Excel.Sheet["Sheet1"].Range["A1:J" + (in_requestList.Count+1).ToString()]</CSharpValue>
                        </InArgument>
                      </ueab:AutoFitX.Range>
                    </ueab:AutoFitX>
                    <ueab:SaveExcelFileX DisplayName="Save Excel File" sap:VirtualizedContainerService.HintSize="470,108" sap2010:WorkflowViewState.IdRef="SaveExcelFileX_1">
                      <ueab:SaveExcelFileX.Workbook>
                        <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                          <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">Excel</CSharpValue>
                        </InArgument>
                      </ueab:SaveExcelFileX.Workbook>
                    </ueab:SaveExcelFileX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <ueab:ExcelApplicationCard.WorkbookPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">filePath</CSharpValue>
                </InArgument>
              </ueab:ExcelApplicationCard.WorkbookPath>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>